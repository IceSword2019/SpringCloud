server.port=16001
#指定服务消费者在注册中心的Application名字
spring.application.name=ConfigClient
#指定服务的注册中心地址为http://localhost:8761/eureka/
eureka.client.service-url.defaultZone=http://backup:11002/eureka/

#【问题1】在分布式集群中通过hostname是访问不到具体实例的，需要用具体IP
#【问题2】spring.cloud.client.ip-address会把不是无线网卡，也不是本机以太网的虚拟机网卡地址注册上去
#【问题3】用这个配置排除多余网卡配置是不生效的，因为程序是先获取ip后读取配置
#spring.cloud.inetUtils.ignored-interfaces=["VMware.*"]
#spring.cloud.inetUtils.preferred-networks=["192.168.216"]
#spring.cloud.inetUtils.use-only-site-local-interfaces=true
#【问题4】spring.cloud.client.ip-address既然获取不到正确的IP则直接给配一个正确的静态IP
spring.cloud.client.ip-address=192.168.216.69

#Flag to indicate that failure to connect to the server is fatal (default false).
spring.cloud.config.fail-fast=true
#Flag to say that remote configuration is enabled. Default true;
spring.cloud.config.enabled=true
#配置中心的发现开启
spring.cloud.config.discovery.enabled=true
#配置中心的实例名称
spring.cloud.config.discovery.service-id=ConfigServer
#配置中心的服务地址
spring.cloud.config.uri=http://192.168.216.69:15001
#从github的learn分支
spring.cloud.config.label=learn
#从github的配置文件{application}
spring.cloud.config.name=application
#从github的配置文件{profile}
spring.cloud.config.profile=client01
